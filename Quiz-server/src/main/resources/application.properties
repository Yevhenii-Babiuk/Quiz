spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://ec2-46-137-84-173.eu-west-1.compute.amazonaws.com:5432/d1sj0op03deffs?sslmode=require&amp;ssl=true&amp;sslfactory=org.postgresql.ssl.NonValidatingFactory
spring.datasource.username=mpazvcirtrbzas
spring.datasource.password=eac47b459fa790923a8d938f3e8b92e9aaf495639b5228eeeededf5082bfdbb0
spring.datasource.hikari.connection-timeout = 20000
spring.datasource.hikari.minimum-idle= 2
spring.datasource.hikari.maximum-pool-size= 5
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.max-lifetime= 1000
spring.datasource.hikari.auto-commit =true
spring.session.jdbc.initialize-schema=always

sql.generic={\
  getAll:'SELECT * FROM %s;',\
  get:'SELECT * FROM %s WHERE id = ?;',\
  delete:'DELETE FROM %s WHERE id = ?;'\
  }

sql.users={\
  insert:'INSERT INTO users (login, password, email, status, role, first_name, second_name, registered_date, profile, total_score) VALUES (?, ?, ?, cast(? AS profile_status), cast(? AS user_role), ?, ?, NOW(), ?, ?);',\
  selectByMail:'SELECT * FROM users WHERE email=?;',\
  update:'UPDATE users SET login = ?, password = ?, email = ?, status = cast(? AS profile_status), role = cast(? AS user_role), first_name = ?, second_name = ?, registered_date = ?, profile = ?, total_score =? WHERE id = ?;',\
  rowCount:'SELECT count(id) AS row_count FROM users WHERE role = cast(? AS user_role);',\
  getPageByRole:'SELECT * AS row_count FROM users WHERE role = cast(? AS user_role) LIMIT ? OFFSET ?;',\
  selectByLoginAndPassword:'SELECT * FROM users WHERE login=? AND password=?;'\
  }

sql.tokens={\
  getByUserId:'SELECT * FROM system_action_tokens WHERE user_id=?;',\
  getUserId:'SELECT user_id FROM system_action_tokens WHERE token=? AND token_type=cast(? AS system_action_token_type) AND expired_date > NOW();'}

sql.quiz={\
  insert:'INSERT INTO quiz (name, author_id, category_id, status, published_date, updated_date, created_date, questions_number, max_score) VALUES (?, ?, ?, cast(? AS quiz_status), ?, ?, NOW(), ?, ?);',\
  update:'UPDATE quiz SET name = ?, author_id = ?, category_id = ?, status = cast(? AS quiz_status), published_date = ?, updated_date = ?, created_date = ?, questions_number = ?, max_score = ? WHERE id = ?;'}

sql.question={\
  insert:'INSERT INTO question (quiz_id, type, content, score, image_url) VALUES(?, cast(? AS question_type), ?, ?, ?)',\
  update:'UPDATE question SET quiz_id = ?, type = cast(? AS question_type), content = ?, score = ?, image_url = ? WHERE id = ?',\
  getByQuizId:'SELECT * FROM question WHERE quiz_id = ?'}

sql.questionOption={\
  insert:'INSERT INTO question_option (question_id, content, is_correct, sequence_order) VALUES(?, ?, ?, ?)',\
  update:'UPDATE question_option SET question_id = ?, content = ?, is_correct = ?, sequence_order = ? WHERE id = ?',\
  getByQuestionId:'SELECT * FROM question_option WHERE question_id = ?'}


